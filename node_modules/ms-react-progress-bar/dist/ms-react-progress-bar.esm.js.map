{"version":3,"file":"ms-react-progress-bar.esm.js","sources":["../src/functions/functions.ts","../src/functions/styles.ts","../src/components/ProgressBar/ProgressBar.tsx"],"sourcesContent":["import {\r\n  AlignmentType,\r\n  BackgroundType,\r\n  IProgressOptions,\r\n} from '../models/models';\r\n\r\nexport const getPercentageValue = (value: number, maxValue: number) => {\r\n  return isNaN(value) ? 0 : (value / (isNaN(maxValue) ? 100 : maxValue)) * 100;\r\n};\r\n\r\nexport const getLabelAlignment = (alignment: AlignmentType) => {\r\n  return alignment === 'right'\r\n    ? 'flex-end'\r\n    : alignment === 'center'\r\n    ? alignment\r\n    : 'flex-start';\r\n};\r\n\r\nexport const getProgressBackgroundStyle = (\r\n  backgroundType: BackgroundType,\r\n  barColor: string\r\n): { [key: string]: string } => {\r\n  if (barColor.startsWith('#')) {\r\n    return backgroundType === 'striped'\r\n      ? {\r\n          backgroundImage: `repeating-linear-gradient( 135deg, ${barColor}66, ${barColor}66 5px, ${barColor} 5px, ${barColor} 10px)`,\r\n        }\r\n      : { background: barColor };\r\n  }\r\n  return { background: barColor };\r\n};\r\n\r\nexport const getDefaultOptions = (): IProgressOptions => ({\r\n  type: 'regular',\r\n  maxValue: 100,\r\n  containerColor: '#dddddd',\r\n  containerStyle: 'bg',\r\n  barColor: '#2c43ac',\r\n  customLabel: '',\r\n  labelVisibility: true,\r\n  labelAlignment: 'left',\r\n  labelColor: 'white',\r\n  labelSize: '12px',\r\n  height: '15px',\r\n  borderRadius: '10px',\r\n  stripeAnimation: false,\r\n  stripeAnimationDuration: '10s',\r\n  labelPosition: 'center',\r\n  showMaxValue: false,\r\n});\r\n","import { IProgressOptions } from '../models/models';\r\nimport { getLabelAlignment, getProgressBackgroundStyle } from './functions';\r\n\r\nexport const getProgressBarStyles = (\r\n  progressOptions: IProgressOptions,\r\n  percentageValue: number\r\n): { [key: string]: { [key: string]: string | undefined } } => {\r\n  const {\r\n    type,\r\n    height,\r\n    containerColor,\r\n    containerStyle,\r\n    barColor,\r\n    labelVisibility,\r\n    labelAlignment,\r\n    labelColor,\r\n    labelSize,\r\n    borderRadius,\r\n    stripeAnimation,\r\n    stripeAnimationDuration,\r\n    labelPosition,\r\n    showMaxValue,\r\n  } = progressOptions;\r\n\r\n  return {\r\n    containerStyles: {\r\n      height,\r\n      backgroundColor: containerStyle === 'bg' ? containerColor : 'transparent',\r\n      border:\r\n        containerStyle === 'border' ? `2px solid ${containerColor}` : 'none',\r\n      borderRadius,\r\n      marginTop: labelPosition === 'top' ? '20px' : '5px',\r\n      marginBottom: labelPosition === 'bottom' ? '20px' : '5px',\r\n    },\r\n    progressBarStyles: {\r\n      ...getProgressBackgroundStyle(type!, barColor!),\r\n      width:\r\n        percentageValue <= 0\r\n          ? '0%'\r\n          : `${percentageValue > 100 ? 100 : percentageValue}%`,\r\n      borderRadius,\r\n      animation: stripeAnimation\r\n        ? `moveBG ${stripeAnimationDuration} linear infinite`\r\n        : '',\r\n    },\r\n    labelStyles: {\r\n      color: labelColor,\r\n      justifyContent: getLabelAlignment(labelAlignment!),\r\n      fontSize: labelSize,\r\n      display: !labelVisibility ? 'none' : 'flex',\r\n      minWidth: showMaxValue ? '70px' : '30px',\r\n      borderRadius,\r\n      top: labelPosition === 'top' ? '-20px' : '',\r\n      bottom: labelPosition === 'bottom' ? '-20px' : '',\r\n      height: labelPosition === 'center' ? '100%' : '',\r\n    },\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { IProgressBarProps, IProgressOptions } from '../../models/models';\r\nimport {\r\n  getDefaultOptions,\r\n  getPercentageValue,\r\n} from '../../functions/functions';\r\nimport { getProgressBarStyles } from '../../functions/styles';\r\n\r\nexport const ProgressBar = ({ value, options }: IProgressBarProps) => {\r\n  const progressBarOptions: IProgressOptions = {\r\n    ...getDefaultOptions(),\r\n    ...options,\r\n  };\r\n  const { maxValue, showMaxValue, customLabel } = progressBarOptions;\r\n  const percentageValue: number = getPercentageValue(value, maxValue!);\r\n  const styles = getProgressBarStyles(progressBarOptions, percentageValue);\r\n\r\n  const { containerStyles, progressBarStyles, labelStyles } = styles;\r\n\r\n  return (\r\n    <div className=\"ms-progress-wrapper_A043BXZ\">\r\n      <div className=\"ms-progress-container_XH4B78M\" style={containerStyles}>\r\n        <div className=\"ms-progress-bar_NMK78H2\" style={progressBarStyles}>\r\n          <div className=\"ms-progress-label_97NH7CX\" style={labelStyles}>\r\n            {!!customLabel\r\n              ? customLabel\r\n              : `${\r\n                  isNaN(value) || Number(value) < 0\r\n                    ? 0\r\n                    : value > maxValue!\r\n                    ? maxValue\r\n                    : value\r\n                }${showMaxValue ? ` / ${maxValue}` : ''}%`}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nProgressBar.defaultProps = {\r\n  value: 0,\r\n  options: { ...getDefaultOptions() },\r\n};\r\n"],"names":["getPercentageValue","value","maxValue","isNaN","getLabelAlignment","alignment","getProgressBackgroundStyle","backgroundType","barColor","startsWith","backgroundImage","background","getDefaultOptions","type","containerColor","containerStyle","customLabel","labelVisibility","labelAlignment","labelColor","labelSize","height","borderRadius","stripeAnimation","stripeAnimationDuration","labelPosition","showMaxValue","getProgressBarStyles","progressOptions","percentageValue","containerStyles","backgroundColor","border","marginTop","marginBottom","progressBarStyles","width","animation","labelStyles","color","justifyContent","fontSize","display","minWidth","top","bottom","ProgressBar","options","progressBarOptions","styles","React","className","style","Number","defaultProps"],"mappings":"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"}